Page: reactflow.dev_files/reactflow.dev/learn/concepts/terms-and-definitions.html
----------------------------------------
   [1]¥ We just released React Flow Components powered by shadcn CLI
   (BUTTON)
   [2]

   React Flow
   [3]Learn[4]Reference[5]Examples[6]Components[7]Showcase (BUTTON) More
   (BUTTON) Search
   [8]React Flow Pro (BUTTON)
   (BUTTON) Search
     * [9]Quickstart
     * (BUTTON) Concepts
          + [10]Introduction
          + [11]Terms and Definitions
          + [12]Core Concepts
          + [13]The Viewport
          + [14]Built-In Components
     * (BUTTON) Getting Started
          + [15]Installation
          + [16]Building a Flow
          + [17]Adding Interactivity
     * (BUTTON) Customizing React Flow
          + [18]Custom Nodes
          + [19]Custom Node Props
          + [20]Custom Edges
          + [21]Custom Edge Props
          + [22]Theming
     * (BUTTON) Layouting
          + [23]Layouting Libraries
          + [24]Sub-Flows
     * (BUTTON) Advanced Use
          + [25]Accessibility
          + [26]Testing
          + [27]TypeScript
          + [28]Uncontrolled Flows
          + [29]State Management
          + [30]Computing Flows
          + [31]Server Side Rendering
          + [32]Devtools
     * [33]Tutorials
          + [34]Slideshow App
          + [35]Web Audio API
          + [36]Mind Map App
     * (BUTTON) Troubleshooting
          + [37]Common Errors
          + [38]Remove Attribution
          + [39]Migrate to v12
          + [40]Migrate to v11
          + [41]Migrate to v10
     * [42]API Reference

   On This Page
     * [43]Nodes
     * [44]Custom Nodes
     * [45]Handles
     * [46]Edges
     * [47]Custom Edges
     * [48]Connection Line
     * [49]Viewport

   [50]Question? Give us feedback ->[51]Edit this page

   What's new?
   [52]Our examples have a fresh new look[53]React Flow
   CLI[55]...and more!
   [56]Learn[57]Concepts
   Terms and Definitions

Terms and Definitions

   In this part of the docs we are explaining some basic React Flow terms
   and definition. Three things you'll be using a lot in React Flow are
   nodes, edges, and handles.

Nodes

   [58]React Flow
   Press enter or space to select a node.You can then use the arrow keys
   to move the node around. Press delete to remove it and escape to
   cancel.
   Press enter or space to select an edge. You can then press delete to
   remove it or escape to cancel.

   A node in React Flow is a React component. That means it can render
   anything you like. Each node has an x- and y-coordinate, which tells it
   where it is placed in the viewport. By default, a node looks like in
   the example above. You can find all the options for customizing your
   nodes in the [59]Node options documentation.

Custom Nodes

   This is where the magic of React Flow happens. You can customize nodes
   to look and act however you would like. Much of the functionality that
   you might create is not built-in to React Flow. Some of the things you
   might do with a custom node are:
     * Render form elements
     * Visualize data
     * Support multiple handles

   Please refer to the [60]custom node docs for further information.

Handles

   [61]React Flow
   Press enter or space to select a node.You can then use the arrow keys
   to move the node around. Press delete to remove it and escape to
   cancel.
   Press enter or space to select an edge. You can then press delete to
   remove it or escape to cancel.

   A handle (also called "port" in other libraries) is the place where an
   edge attaches to a node. The handle can be placed anywhere, and styled
   as you like. It's just a div element. By default, it appears as a grey
   circle on the top, bottom, left, or right of the node. When creating a
   custom node, you can have as many handles as you need in your node.
   More information can be found in the [62]handle docs.

Edges

   [63]React Flow
   Press enter or space to select a node.You can then use the arrow keys
   to move the node around. Press delete to remove it and escape to
   cancel.
   Press enter or space to select an edge. You can then press delete to
   remove it or escape to cancel.

   An edge connects two nodes. Every edge needs a target and a source
   node. React Flow comes with four built-in [64]edges types: default
   (bezier), smoothstep, step and straight. An edge is SVG path that can
   be styled with CSS and is completely customizable. If you are using
   multiple handles, you can reference them individually to create
   multiple connections for a node.

Custom Edges

   Like custom nodes, you can also customize edges. Things that people do
   with custom edges are:
     * Add a button to remove an edge
     * Custom routing behaviour
     * Complex styling or interactions that cannot be solved with just one
       SVG path

   You can find more information on the [65]custom edges api site.

Connection Line

   React Flow has built-in functionality to click-and-drag from one handle
   to another in order to create a new edge. While dragging, the
   placeholder edge is called a connection line. The connection line also
   comes with four types built-in and is customizable. You can find the
   props for configuring the connection line in the [66]props section.

Viewport

   (BUTTON) (BUTTON) (BUTTON)
   [67]React Flow
   Press enter or space to select a node.You can then use the arrow keys
   to move the node around. Press delete to remove it and escape to
   cancel.
   Press enter or space to select an edge. You can then press delete to
   remove it or escape to cancel.
   Current Viewport: x: 0.00, y: 0.00, zoom: 1.00

   All of React Flow exists inside of the viewport. The viewport has a x,
   y and zoom value. When you drag the pane, you change the x and y
   coordinates and when you zoom in or out you alter the zoom level.
   [68]Quickstart[69]Slideshow App

   A project by the xyflow team
   We are building and maintaining open source software for node-based UIs
   since 2019.

   Docs
   [70]Getting Started[71]API Reference[72]Examples[73]Showcase

   Social
   [74]Discord[75]Github[76]X / Twitter[77]Bluesky

   xyflow
   [78]Blog[79]Open Source[80]About[81]Contact[82]
   Careers hiring

   Legal
   [83]MIT License[84]Code of Conduct[85]Imprint

   [86]info@xyflow.com -- Copyright © 2024 [87]webkid GmbH. All rights
   reserved -- website design by [88]Facu Montanaro

