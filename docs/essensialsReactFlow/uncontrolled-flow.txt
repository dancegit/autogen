Page: reactflow.dev_files/reactflow.dev/docs/guides/uncontrolled-flow.html
----------------------------------------
   [1]¥ We just released React Flow Components powered by shadcn CLI
   (BUTTON)
   [2]

   React Flow
   [3]Learn[4]Reference[5]Examples[6]Components[7]Showcase (BUTTON) More
   (BUTTON) Search
   [8]React Flow Pro (BUTTON)
   (BUTTON) Search
     * [9]Quickstart
     * (BUTTON) Concepts
          + [10]Introduction
          + [11]Terms and Definitions
          + [12]Core Concepts
          + [13]The Viewport
          + [14]Built-In Components
     * (BUTTON) Getting Started
          + [15]Installation
          + [16]Building a Flow
          + [17]Adding Interactivity
     * (BUTTON) Customizing React Flow
          + [18]Custom Nodes
          + [19]Custom Node Props
          + [20]Custom Edges
          + [21]Custom Edge Props
          + [22]Theming
     * (BUTTON) Layouting
          + [23]Layouting Libraries
          + [24]Sub-Flows
     * (BUTTON) Advanced Use
          + [25]Accessibility
          + [26]Testing
          + [27]TypeScript
          + [28]Uncontrolled Flows
          + [29]State Management
          + [30]Computing Flows
          + [31]Server Side Rendering
          + [32]Devtools
     * [33]Tutorials
          + [34]Slideshow App
          + [35]Web Audio API
          + [36]Mind Map App
     * (BUTTON) Troubleshooting
          + [37]Common Errors
          + [38]Remove Attribution
          + [39]Migrate to v12
          + [40]Migrate to v11
          + [41]Migrate to v10
     * [42]API Reference

   On This Page
     * [43]Updating Nodes and Edges

   [44]Question? Give us feedback ->[45]Edit this page

   What's new?
   [46]Our examples have a fresh new look[47]React Flow
   CLI[49]...and more!
   [50]Learn[51]Advanced Use
   Uncontrolled Flows

Uncontrolled Flow

   There are two ways to use React Flow - controlled or uncontrolled.
   Controlled means, that you are in control of the state of the nodes and
   edges. In an uncontrolled flow the state of the nodes and edges is
   handled by React Flow internally. In this part we will show you how to
   work with an uncontrolled flow.

   An implementation of an uncontrolled flow is simpler, because you don't
   need to pass any handlers:

   IFRAME:
   [52]https://example-apps.xyflow.com/react/learn/uncontrolled/index.html

   (BUTTON) Open in Stackblitz (BUTTON) Open in Codesandbox
   (BUTTON) App.jsx (BUTTON) edges.js (BUTTON) index.css (BUTTON)
   index.html (BUTTON) index.jsx (BUTTON) nodes.js
import { ReactFlow } from '@xyflow/react';
import '@xyflow/react/dist/style.css';

import { defaultNodes } from './nodes';
import { defaultEdges } from './edges';

const edgeOptions = {
  animated: true,
  style: {
    stroke: 'white',
  },
};

const connectionLineStyle = { stroke: 'white' };

export default function Flow() {
  return (
    <ReactFlow
      defaultNodes={defaultNodes}
      defaultEdges={defaultEdges}
      defaultEdgeOptions={edgeOptions}
      fitView
      style={{
        backgroundColor: '#D3D2E5',
      }}
      connectionLineStyle={connectionLineStyle}
    />
  );
}

   (BUTTON)

   As you can see, we are passing defaultEdgeOptions to define that edges
   are animated. This is helpful, because you can't use the onConnect
   handler anymore to pass custom options to a newly created edge. Try to
   connect "Node B" with "Node C" and you see that the new edge is
   animated.

Updating Nodes and Edges

   Since you don't have nodes and edges in your local state, you can't
   update them directly. To do so, you need to use the [53]React Flow
   instance that comes with functions for updating the internal state. You
   can receive the instance via the onInit callback or better by using the
   [54]useReactFlow hook. Let's create a button that adds a new node at a
   random position. For this, we are wrapping our flow with the
   [55]ReactFlowProvider and use the [56]addNodes function.
   ¡

   The Flow component in this example is wrapped with the
   ReactFlowProvider to use the useReactFlow hook.

   IFRAME:
   [57]https://example-apps.xyflow.com/react/learn/uncontrolled-2/index.ht
   ml

   (BUTTON) Open in Stackblitz (BUTTON) Open in Codesandbox
   (BUTTON) App.jsx (BUTTON) edges.js (BUTTON) index.css (BUTTON)
   index.html (BUTTON) index.jsx (BUTTON) nodes.js
import { useCallback } from 'react';
import { ReactFlow, ReactFlowProvider, useReactFlow } from '@xyflow/react';
import '@xyflow/react/dist/style.css';

import { defaultNodes } from './nodes';
import { defaultEdges } from './edges';

const edgeOptions = {
  animated: true,
  style: {
    stroke: 'white',
  },
};

const connectionLineStyle = { stroke: 'white' };

let nodeId = 0;

function Flow() {
  const reactFlowInstance = useReactFlow();
  const onClick = useCallback(() => {
    const id = `${++nodeId}`;
    const newNode = {
      id,
      position: {
        x: Math.random() * 500,
        y: Math.random() * 500,
      },
      data: {
        label: `Node ${id}`,
      },
    };
    reactFlowInstance.addNodes(newNode);
  }, []);

  return (
    <>
      <ReactFlow
        defaultNodes={defaultNodes}
        defaultEdges={defaultEdges}
        defaultEdgeOptions={edgeOptions}
        fitView
        style={{
          backgroundColor: '#D3D2E5',
        }}
        connectionLineStyle={connectionLineStyle}
      />
      <button onClick={onClick} className="btn-add">
        add node
      </button>
    </>
  );
}

export default function () {
  return (
    <ReactFlowProvider>
      <Flow />
    </ReactFlowProvider>
  );
}

   (BUTTON)
   [58]Quickstart[59]Slideshow App

   A project by the xyflow team
   We are building and maintaining open source software for node-based UIs
   since 2019.

   Docs
   [60]Getting Started[61]API Reference[62]Examples[63]Showcase

   Social
   [64]Discord[65]Github[66]X / Twitter[67]Bluesky

   xyflow
   [68]Blog[69]Open Source[70]About[71]Contact[72]
   Careers hiring

   Legal
   [73]MIT License[74]Code of Conduct[75]Imprint

   [76]info@xyflow.com -- Copyright © 2024 [77]webkid GmbH. All rights
   reserved -- website design by [78]Facu Montanaro

