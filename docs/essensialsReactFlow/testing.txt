Page: reactflow.dev_files/reactflow.dev/learn/advanced-use/testing.html
----------------------------------------
   [1]¥ We just released React Flow Components powered by shadcn CLI
   (BUTTON)
   [2]

   React Flow
   [3]Learn[4]Reference[5]Examples[6]Components[7]Showcase (BUTTON) More
   (BUTTON) Search
   [8]React Flow Pro (BUTTON)
   (BUTTON) Search
     * [9]Quickstart
     * (BUTTON) Concepts
          + [10]Introduction
          + [11]Terms and Definitions
          + [12]Core Concepts
          + [13]The Viewport
          + [14]Built-In Components
     * (BUTTON) Getting Started
          + [15]Installation
          + [16]Building a Flow
          + [17]Adding Interactivity
     * (BUTTON) Customizing React Flow
          + [18]Custom Nodes
          + [19]Custom Node Props
          + [20]Custom Edges
          + [21]Custom Edge Props
          + [22]Theming
     * (BUTTON) Layouting
          + [23]Layouting Libraries
          + [24]Sub-Flows
     * (BUTTON) Advanced Use
          + [25]Accessibility
          + [26]Testing
          + [27]TypeScript
          + [28]Uncontrolled Flows
          + [29]State Management
          + [30]Computing Flows
          + [31]Server Side Rendering
          + [32]Devtools
     * [33]Tutorials
          + [34]Slideshow App
          + [35]Web Audio API
          + [36]Mind Map App
     * (BUTTON) Troubleshooting
          + [37]Common Errors
          + [38]Remove Attribution
          + [39]Migrate to v12
          + [40]Migrate to v11
          + [41]Migrate to v10
     * [42]API Reference

   On This Page
     * [43]Using Cypress or Playwright
     * [44]Using Jest

   [45]Question? Give us feedback ->[46]Edit this page

   What's new?
   [47]Our examples have a fresh new look[48]React Flow
   CLI[50]...and more!
   [51]Learn[52]Advanced Use
   Testing

Testing

   There are plenty of options to test a React application. If you want to
   test a React Flow application, we recommend to use [53]Cypress or
   [54]Playwright. React Flow needs to measure nodes in order to render
   edges and for that relies on rendering DOM elements.

Using Cypress or Playwright

   If you are using Cypress or Playwright no additional setup is needed.
   You can refer to the getting started guide for [55]Cypress here and for
   [56]Playwright here.

Using Jest

   If you are using [57]Jest, you need to mock some features in order to
   be able to run your tests. You can do that by adding this file to your
   project. Calling mockReactFlow() in a setupTests file (or inside a
   beforeEach) will trigger the necessary overrides.
// To make sure that the tests are working, it's important that you are using
// this implementation of ResizeObserver and DOMMatrixReadOnly
class ResizeObserver {
  callback: globalThis.ResizeObserverCallback;

  constructor(callback: globalThis.ResizeObserverCallback) {
    this.callback = callback;
  }

  observe(target: Element) {
    this.callback([{ target } as globalThis.ResizeObserverEntry], this);
  }

  unobserve() {}

  disconnect() {}
}

class DOMMatrixReadOnly {
  m22: number;
  constructor(transform: string) {
    const scale = transform?.match(/scale\(([1-9.])\)/)?.[1];
    this.m22 = scale !== undefined ? +scale : 1;
  }
}

// Only run the shim once when requested
let init = false;

export const mockReactFlow = () => {
  if (init) return;
  init = true;

  global.ResizeObserver = ResizeObserver;

  // @ts-ignore
  global.DOMMatrixReadOnly = DOMMatrixReadOnly;

  Object.defineProperties(global.HTMLElement.prototype, {
    offsetHeight: {
      get() {
        return parseFloat(this.style.height) || 1;
      },
    },
    offsetWidth: {
      get() {
        return parseFloat(this.style.width) || 1;
      },
    },
  });

  (global.SVGElement as any).prototype.getBBox = () => ({
    x: 0,
    y: 0,
    width: 0,
    height: 0,
  });
};

   (BUTTON)

   If you want to test mouse events with jest (for example inside your
   custom nodes), you need to disable d3-drag as it does not work outside
   of the browser:
<ReactFlow nodesDraggable={false} {...rest} />

   (BUTTON)
   [58]Quickstart[59]Slideshow App

   A project by the xyflow team
   We are building and maintaining open source software for node-based UIs
   since 2019.

   Docs
   [60]Getting Started[61]API Reference[62]Examples[63]Showcase

   Social
   [64]Discord[65]Github[66]X / Twitter[67]Bluesky

   xyflow
   [68]Blog[69]Open Source[70]About[71]Contact[72]
   Careers hiring

   Legal
   [73]MIT License[74]Code of Conduct[75]Imprint

   [76]info@xyflow.com -- Copyright © 2024 [77]webkid GmbH. All rights
   reserved -- website design by [78]Facu Montanaro

