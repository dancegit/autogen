Page: reactflow.dev_files/reactflow.dev/learn/advanced-use/accessibility.html
----------------------------------------
   [1]¥ We just released React Flow Components powered by shadcn CLI
   (BUTTON)
   [2]

   React Flow
   [3]Learn[4]Reference[5]Examples[6]Components[7]Showcase (BUTTON) More
   (BUTTON) Search
   [8]React Flow Pro (BUTTON)
   (BUTTON) Search
     * [9]Quickstart
     * (BUTTON) Concepts
          + [10]Introduction
          + [11]Terms and Definitions
          + [12]Core Concepts
          + [13]The Viewport
          + [14]Built-In Components
     * (BUTTON) Getting Started
          + [15]Installation
          + [16]Building a Flow
          + [17]Adding Interactivity
     * (BUTTON) Customizing React Flow
          + [18]Custom Nodes
          + [19]Custom Node Props
          + [20]Custom Edges
          + [21]Custom Edge Props
          + [22]Theming
     * (BUTTON) Layouting
          + [23]Layouting Libraries
          + [24]Sub-Flows
     * (BUTTON) Advanced Use
          + [25]Accessibility
          + [26]Testing
          + [27]TypeScript
          + [28]Uncontrolled Flows
          + [29]State Management
          + [30]Computing Flows
          + [31]Server Side Rendering
          + [32]Devtools
     * [33]Tutorials
          + [34]Slideshow App
          + [35]Web Audio API
          + [36]Mind Map App
     * (BUTTON) Troubleshooting
          + [37]Common Errors
          + [38]Remove Attribution
          + [39]Migrate to v12
          + [40]Migrate to v11
          + [41]Migrate to v10
     * [42]API Reference

   On This Page
     * [43]Built-in Features
     * [44]Keyboard Controls
     * [45]WAI-ARIA
     * [46]Better accessible node-based UIs

   [47]Question? Give us feedback ->[48]Edit this page

   What's new?
   [49]Our examples have a fresh new look[50]React Flow
   CLI[52]...and more!
   [53]LearnAdvanced Use
   Accessibility

Accessibility

   A flow is accessible with a keyboard and readable by a screenreader.
   Nodes and edges are focusable, selectable, moveable and deleteable with
   the keyboard.

   If you have an idea how we can improve the accessibility of React Flow,
   please feel free to [54]contact us.

Built-in Features

Keyboard Controls

     * Nodes and edges are focusable by using the Tab key (tabIndex={0} +
       role="button")
     * Nodes and edges are selectable by using Enter or Space,
       un-selectable by using Escape
     * Nodes are moveable with arrow keys (press Shift for increasing
       velocity)
     * Nodes and Edges get a aria-describedby attribute to describe
       keyboard controls

   You can configure the keyboard controls with the props: nodesFocusable,
   edgesFocusable and disableKeyboardA11y. nodesFocusable and
   edgesFocusable (both true by default) need to be true if you want to be
   able to focus elements with Tab and then select or deselect them with
   Enter and Escape. If you are setting disableKeyboardA11y={true}, the
   nodes are not moveable with arrow keys anymore.

   Nodes are only moveable with arrow keys when nodesDraggable and
   nodesFocusable are true (default behaviour).

WAI-ARIA

     * Edges: Default aria-label - overwritable with new Edge option
       ariaLabel
     * Nodes: ariaLabel option (no default here, because we assume that
       there might be text inside the node)
     * Minimap component: aria-describedby + title
     * Attribution component: aria-label
     * Controls component: aria-label for controls container and buttons

Better accessible node-based UIs

     * When your nodes don't have textual content, you should provide an
       aria-label via the node options.
     * You can improve the default aria-label (`from source.id to
       target.id') of an edge, when your nodes have names that you could
       use by passing specific aria-labels to the edges.
     * follow best [55]practice WAI-ARIA guides in your application

   [56]Quickstart[57]Slideshow App

   A project by the xyflow team
   We are building and maintaining open source software for node-based UIs
   since 2019.

   Docs
   [58]Getting Started[59]API Reference[60]Examples[61]Showcase

   Social
   [62]Discord[63]Github[64]X / Twitter[65]Bluesky

   xyflow
   [66]Blog[67]Open Source[68]About[69]Contact[70]
   Careers hiring

   Legal
   [71]MIT License[72]Code of Conduct[73]Imprint

   [74]info@xyflow.com -- Copyright © 2024 [75]webkid GmbH. All rights
   reserved -- website design by [76]Facu Montanaro

