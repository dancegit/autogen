Page: modal.com_files/modal.com/docs/guide/local-data.html
----------------------------------------
   [1]Modal logo
   [2]Guide [3]Examples [4]Reference [5]Playground
   [6]Log In [7]Sign Up
   (BUTTON)
   [8]Introduction[9]Custom container images [10]Custom
   containers[11]Private registries[12]GPUs and other resources [13]GPU
   acceleration[14]Using CUDA on Modal[15]Reserving CPU and
   memory[16]Scaling out [17]Scaling out[18]Dicts and queues[19]Job
   processing[20]Concurrent inputs on a single container (beta)[21]Dynamic
   batching (beta)[22]Scheduling and cron jobs[23]Deployment [24]Apps,
   Stubs, and entrypoints[25]Managing deployments[26]Invoke deployed
   functions[27]Continuous deployment[28]Secrets and environment variables
   [29]Secrets[30]Environment variables[31]Web endpoints [32]Web
   endpoints[33]Streaming endpoints[34]Web endpoint URLs[35]Request
   timeouts[36]Networking [37]Tunnels (beta)[38]Proxies (beta)[39]Data
   sharing and storage [40]Passing local data[41]Volumes[42]Mounting local
   files and directories[43]Storing model weights[44]Dataset
   ingestion[45]Cloud bucket mounts[46]Network file systems
   (superseded)[47]Sandboxes [48]Sandboxes[49]Running
   commands[50]Networking and security[51]File access[52]Performance
   [53]Cold start performance[54]Memory Snapshot (beta)[55]Geographic
   latency[56]Reliability and robustness [57]Failures and
   retries[58]Preemption[59]Timeouts[60]Troubleshooting[61]Security and
   privacy[62]Integrations [63]Connecting Modal to your Vercel
   account[64]Connecting Modal to your Datadog account[65]Connecting Modal
   to your OpenTelemetry provider[66]Okta SSO[67]Slack notifications
   (beta)[68]Other topics [69]File and project structure[70]Developing and
   debugging[71]Modal user account
   setup[72]Workspaces[73]Environments[74]Jupyter
   notebooks[75]Asynchronous API usage[76]Global variables[77]Region
   selection[78]Container lifecycle hooks[79]Parameterized functions[80]S3
   Gateway endpoints
     __________________________________________________________________

Passing local data

   If you have a function that needs access to some data not present in
   your Python files themselves you have a few options for bundling that
   data with your Modal app.

Passing function arguments

   The simplest and most straight-forward way is to read the data from
   your local script and pass the data to the outermost Modal function
   call:
import json


@app.function()
def foo(a):
    print(sum(a["numbers"]))


@app.local_entrypoint()
def main():
    data_structure = json.load(open("blob.json"))
    foo.remote(data_structure)

   (BUTTON) Copy

   Any data of reasonable size that is serializable through
   [81]cloudpickle is passable as an argument to Modal functions.

   Refer to the section on [82]global variables for how to work with
   objects in global scope that can only be initialized locally.

Mounting directories

   If you want to forward files from your local system, you can do that
   through [83]modal.Mount objects and the mounts function decorator
   option:
@app.function(mounts=[modal.Mount.from_local_dir("/user/john/.aws", remote_path=
"/root/.aws")])
def aws_stuff():
    ...

   (BUTTON) Copy

   Note: the mounted directory will not be shared between worker
   instances, so modifying files or writing new files to a mount will not
   be reflected in other functions calls with the same mount. For this
   reason, you should typically treat the Mount as read-only.

Mounting local packages

   For the special case of mounting a local package so it's also available
   within your Python environment inside the container, Modal provides a
   [84]Mount.from_local_python_packages helper function:
import modal
import my_local_module

app = modal.App()

@app.function(mounts=[modal.Mount.from_local_python_packages("my_local_module",
"my_other_module")])
def f():
    my_local_module.do_stuff()

   (BUTTON) Copy
   [85]Passing local data [86]Passing function arguments [87]Mounting
   directories [88]Mounting local packages
   Modal logo Â© 2024
   [89]About [90]Status [91]Changelog [92]Documentation [93]Slack
   Community [94]Pricing [95]Examples

