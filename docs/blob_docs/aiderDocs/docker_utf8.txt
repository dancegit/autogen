Page: aider.chat_files/aider.chat/docs/install/docker.html
----------------------------------------
   #[1]RSS Feed

   [2]Skip to main content

   [3]aider (BUTTON)

     * [4]Home
     * (BUTTON) [5]Installation
          + [6]Installing aider
          + [7]Optional steps
          + [8]Aider with docker
          + [9]Install with pipx
          + [10]GitHub Codespaces
     * (BUTTON) [11]Usage
          + [12]Tips
          + [13]In-chat commands
          + [14]Chat modes
          + [15]Tutorial videos
          + [16]Voice-to-code with aider
          + [17]Images & web pages
          + [18]Prompt caching
          + [19]Aider in your browser
          + [20]Specifying coding conventions
          + [21]Linting and testing
     * (BUTTON) [22]Connecting to LLMs
          + [23]OpenAI
          + [24]Anthropic
          + [25]Gemini
          + [26]GROQ
          + [27]Azure
          + [28]Cohere
          + [29]DeepSeek
          + [30]Ollama
          + [31]OpenAI compatible APIs
          + [32]OpenRouter
          + [33]Vertex AI
          + [34]Amazon Bedrock
          + [35]Other LLMs
          + [36]Editing format
          + [37]Model warnings
     * (BUTTON) [38]Configuration
          + [39]Options reference
          + [40]YAML config file
          + [41]Config with .env
          + [42]Advanced model settings
     * (BUTTON) [43]Troubleshooting
          + [44]File editing problems
          + [45]Model warnings
          + [46]Token limits
          + [47]Aider not found
          + [48]Dependency versions
          + [49]Using /help
     * (BUTTON) [50]Example chat transcripts
          + [51]Create a simple flask app with aider
          + [52]Modify an open source 2048 game with aider
          + [53]A complex multi-file change, with debugging
          + [54]Create a "black box" test case
          + [55]Automatically update docs with aider
          + [56]Build pong with aider and pygame.
          + [57]Complete a css exercise with aider
          + [58]Download, analyze and plot US Census data
          + [59]Editing an asciinema cast file with aider
          + [60]Hello aider!
          + [61]Honor the NO_COLOR environment variable
          + [62]Improve css styling of chat transcripts
          + [63]Semantic search & replace code with aider
     * (BUTTON) [64]More info
          + [65]Git integration
          + [66]Supported languages
          + [67]Repository map
          + [68]Scripting aider
          + [69]Infinite output
          + [70]Edit formats
          + [71]Analytics
          + [72]Privacy policy
          + [73]Release history
     * [74]FAQ
     * [75]Aider LLM Leaderboards
     * [76]Aider blog

     * [77]GitHub
     * [78]Discord

   Aider is AI pair programming in your terminal. Aider is on [79]GitHub
   and [80]Discord.

   ____________________

     * [81]GitHub
     * [82]Discord
     * [83]Blog


Aider with docker

   Aider is available as 2 docker images:
     * paulgauthier/aider installs the aider core, a smaller image that's
       good to get started quickly.
     * paulgauthier/aider-full installs aider will all the optional
       extras.

   The full image has support for features like interactive help, the
   browser GUI and support for using Playwright to scrape web pages. The
   core image can still use these features, but they will need to be
   installed the first time you access them. Since containers are
   ephemeral, the extras will need to be reinstalled the next time you
   launch the aider core container.

Aider core

docker pull paulgauthier/aider
docker run -it --user $(id -u):$(id -g) --volume $(pwd):/app paulgauthier/aider
--openai-api-key $OPENAI_API_KEY [...other aider args...]

Full version

docker pull paulgauthier/aider-full
docker run -it --user $(id -u):$(id -g) --volume $(pwd):/app paulgauthier/aider-
full --openai-api-key $OPENAI_API_KEY [...other aider args...]

How to use it

   You should run the above commands from the root of your git repo, since
   the --volume arg maps your current directory into the docker container.
   Given that, you need to be in the root of your git repo for aider to be
   able to see the repo and all its files.

   You should be sure your that git repo config contains your user name
   and email, since the docker container won't have your global git
   config. Run these commands while in your git repo, before you do the
   docker run command:
git config user.email "you@example.com"
git config user.name "Your Name"

Limitations

     * When you use the in-chat /run command, it will be running shell
       commands inside the docker container. So those commands won't be
       running in your local environment, which may make it tricky to /run
       tests, etc for your project.
     * The /voice command won't work unless you can figure out how to give
       the docker container access to your host audio device. The
       container has libportaudio2 installed, so it should work if you can
       do that.

