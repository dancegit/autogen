Page: aider.chat_files/aider.chat/docs/more/edit-formats.html
----------------------------------------
   #[1]RSS Feed

   [2]Skip to main content

   [3]aider (BUTTON)

     * [4]Home
     * (BUTTON) [5]Installation
          + [6]Installing aider
          + [7]Optional steps
          + [8]Aider with docker
          + [9]Install with pipx
          + [10]GitHub Codespaces
     * (BUTTON) [11]Usage
          + [12]Tips
          + [13]In-chat commands
          + [14]Chat modes
          + [15]Tutorial videos
          + [16]Voice-to-code with aider
          + [17]Images & web pages
          + [18]Prompt caching
          + [19]Aider in your browser
          + [20]Specifying coding conventions
          + [21]Linting and testing
     * (BUTTON) [22]Connecting to LLMs
          + [23]OpenAI
          + [24]Anthropic
          + [25]Gemini
          + [26]GROQ
          + [27]Azure
          + [28]Cohere
          + [29]DeepSeek
          + [30]Ollama
          + [31]OpenAI compatible APIs
          + [32]OpenRouter
          + [33]Vertex AI
          + [34]Amazon Bedrock
          + [35]Other LLMs
          + [36]Editing format
          + [37]Model warnings
     * (BUTTON) [38]Configuration
          + [39]Options reference
          + [40]YAML config file
          + [41]Config with .env
          + [42]Advanced model settings
     * (BUTTON) [43]Troubleshooting
          + [44]File editing problems
          + [45]Model warnings
          + [46]Token limits
          + [47]Aider not found
          + [48]Dependency versions
          + [49]Using /help
     * (BUTTON) [50]Example chat transcripts
          + [51]Create a simple flask app with aider
          + [52]Modify an open source 2048 game with aider
          + [53]A complex multi-file change, with debugging
          + [54]Create a "black box" test case
          + [55]Automatically update docs with aider
          + [56]Build pong with aider and pygame.
          + [57]Complete a css exercise with aider
          + [58]Download, analyze and plot US Census data
          + [59]Editing an asciinema cast file with aider
          + [60]Hello aider!
          + [61]Honor the NO_COLOR environment variable
          + [62]Improve css styling of chat transcripts
          + [63]Semantic search & replace code with aider
     * (BUTTON) [64]More info
          + [65]Git integration
          + [66]Supported languages
          + [67]Repository map
          + [68]Scripting aider
          + [69]Infinite output
          + [70]Edit formats
          + [71]Analytics
          + [72]Privacy policy
          + [73]Release history
     * [74]FAQ
     * [75]Aider LLM Leaderboards
     * [76]Aider blog

     * [77]GitHub
     * [78]Discord

   Aider is AI pair programming in your terminal. Aider is on [79]GitHub
   and [80]Discord.

   ____________________

     * [81]GitHub
     * [82]Discord
     * [83]Blog


Edit formats

   Aider uses various "edit formats" to let LLMs edit source files.
   Different models work better or worse with different edit formats.
   Aider is configured to use the optimal format for most popular, common
   models. You can always force use of a specific edit format with the
   --edit-format switch.

whole

   The "whole" edit format is the simplest possible editing format. The
   LLM is instructed to return a full, updated copy of each source file
   that needs changes. While simple, it can be slow and costly because the
   LLM has to return the entire file even if just a few lines are edited.

   The format expects the file path just before the fenced file content:
show_greeting.py
```
import sys

def greeting(name):
    print(f"Hey ")

if __name__ == '__main__':
    greeting(sys.argv[1])
```

diff

   The "diff" edit format asks the LLM to specify file edits as a series
   of search/replace blocks. This is an efficient format, because the
   model only needs to return parts of the file which have changes.

   They are formatted using a syntax similar to the git merge conflict
   resolution markings, with the file path right before a fenced block:
mathweb/flask/app.py
```
<<<<<<< SEARCH
from flask import Flask
=======
import math
from flask import Flask
>>>>>>> REPLACE
```

diff-fenced

   The "diff-fenced" edit format is based on the diff format, but the file
   path is placed inside the fence. It is primarily used with the Gemini
   family of models, which often fail to conform to fencing approach
   specified in the diff format.
```
mathweb/flask/app.py
<<<<<<< SEARCH
from flask import Flask
=======
import math
from flask import Flask
>>>>>>> REPLACE
```

udiff

   The "udiff" edit format is based on the widely used unified diff
   format, but [85]modified and simplified. This is an efficient format,
   because the model only needs to return parts of the file which have
   changes.

   It was mainly used to the GPT-4 Turbo family of models, to reduce their
   "lazy coding" tendencies with other edit formats.
```diff
--- mathweb/flask/app.py
+++ mathweb/flask/app.py
@@ ... @@
-class MathWeb:
+import sympy
+
+class MathWeb:
```

editor-diff and editor-whole

   These are streamlined versions of the diff and whole formats, intended
   to be used with --editor-edit-format when using [86]architect mode.

