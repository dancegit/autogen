Page: aider.chat_files/aider.chat/examples/2048-game.html
----------------------------------------
   #[1]RSS Feed

   [2]Skip to main content

   [3]aider (BUTTON)

     * [4]Home
     * (BUTTON) [5]Installation
          + [6]Installing aider
          + [7]Optional steps
          + [8]Aider with docker
          + [9]Install with pipx
          + [10]GitHub Codespaces
     * (BUTTON) [11]Usage
          + [12]Tips
          + [13]In-chat commands
          + [14]Chat modes
          + [15]Tutorial videos
          + [16]Voice-to-code with aider
          + [17]Images & web pages
          + [18]Prompt caching
          + [19]Aider in your browser
          + [20]Specifying coding conventions
          + [21]Linting and testing
     * (BUTTON) [22]Connecting to LLMs
          + [23]OpenAI
          + [24]Anthropic
          + [25]Gemini
          + [26]GROQ
          + [27]Azure
          + [28]Cohere
          + [29]DeepSeek
          + [30]Ollama
          + [31]OpenAI compatible APIs
          + [32]OpenRouter
          + [33]Vertex AI
          + [34]Amazon Bedrock
          + [35]Other LLMs
          + [36]Editing format
          + [37]Model warnings
     * (BUTTON) [38]Configuration
          + [39]Options reference
          + [40]YAML config file
          + [41]Config with .env
          + [42]Advanced model settings
     * (BUTTON) [43]Troubleshooting
          + [44]File editing problems
          + [45]Model warnings
          + [46]Token limits
          + [47]Aider not found
          + [48]Dependency versions
          + [49]Using /help
     * (BUTTON) [50]Example chat transcripts
          + [51]Create a simple flask app with aider
          + [52]Modify an open source 2048 game with aider
          + [53]A complex multi-file change, with debugging
          + [54]Create a "black box" test case
          + [55]Automatically update docs with aider
          + [56]Build pong with aider and pygame.
          + [57]Complete a css exercise with aider
          + [58]Download, analyze and plot US Census data
          + [59]Editing an asciinema cast file with aider
          + [60]Hello aider!
          + [61]Honor the NO_COLOR environment variable
          + [62]Improve css styling of chat transcripts
          + [63]Semantic search & replace code with aider
     * (BUTTON) [64]More info
          + [65]Git integration
          + [66]Supported languages
          + [67]Repository map
          + [68]Scripting aider
          + [69]Infinite output
          + [70]Edit formats
          + [71]Analytics
          + [72]Privacy policy
          + [73]Release history
     * [74]FAQ
     * [75]Aider LLM Leaderboards
     * [76]Aider blog

     * [77]GitHub
     * [78]Discord

   Aider is AI pair programming in your terminal. Aider is on [79]GitHub
   and [80]Discord.

   ____________________

     * [81]GitHub
     * [82]Discord
     * [83]Blog


Modify an open source 2048 game with aider

   In this chat transcript, the user explores and modifies an open source
   [85]javascript 2048 game repo.

   Notice that the LLM asks to see a particular source file, and aider
   automatically includes it in the chat session after getting permission
   from the user.

     $ git clone https://github.com/gabrielecirulli/2048
     $ cd 2048
     $ aider

what is this repo?

   Based on the file names you provided, it seems like this repository is
   for a web-based game, possibly a 2048 game clone. The files include
   JavaScript files for game logic, HTML and CSS files for the user
   interface, and various meta files for icons and touch startup images.

   If you need help with any specific part of the code or want to add new
   features, please let me know, and I'll be happy to assist you.

how does the scoring work?

   To help you with the scoring mechanism, I need to see the relevant
   code. Please provide the contents of the js/game_manager.js file, as it
   is likely to contain the scoring logic.

     js/game_manager.js
     Add these files to the chat? y

   Apologies for the oversight. I see the contents of the
   js/game_manager.js file now.

   The scoring in this 2048 game works as follows:
       with a value equal to the sum of the merged tiles' values.

   Here's the relevant code snippet from the js/game_manager.js file:
if (next && next.value === tile.value && !next.mergedFrom) {
  var merged = new Tile(positions.next, tile.value * 2);
  merged.mergedFrom = [tile, next];

  self.grid.insertTile(merged);
  self.grid.removeTile(tile);

  // Converge the two tiles' positions
  tile.updatePosition(positions.next);

  // Update the score
  self.score += merged.value;

  // The mighty 2048 tile
  if (merged.value === 2048) self.won = true;
}

   In this code snippet, when two tiles with the same value (tile and
   next) are found, they are merged into a new tile (merged). The value of
   the new tile is added to the current score (self.score +=
   merged.value). If the merged tile's value is 2048, the game is
   considered won (self.won = true).

can we add some randomness? maybe 10% of the time give the user a 10x bonus?

   Sure, we can add a 10% chance of giving the user a 10x bonus when two
   tiles merge. To implement this, we'll modify the scoring logic in the
   js/game_manager.js file. Here's the step-by-step plan:
       chance).
       before adding it to the score.

   Here's the code change for the js/game_manager.js file:
js/game_manager.js
<<<<<<< ORIGINAL
  // Update the score
  self.score += merged.value;
=======
  // Update the score with a 10% chance of 10x bonus
  var bonus = Math.random() <= 0.1 ? 10 : 1;
  self.score += merged.value * bonus;
>>>>>>> UPDATED

   This change will give the user a 10x bonus 10% of the time when two
   tiles merge.

     Applied edit to js/game_manager.js
     Commit eb9d882 aider: Added a 10% chance of giving the user a 10x
     bonus when two tiles merge.

