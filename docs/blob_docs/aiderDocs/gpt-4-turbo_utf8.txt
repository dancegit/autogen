Page: aider.chat_files/aider.chat/2024/04/09/gpt-4-turbo.html
----------------------------------------
   #[1]RSS Feed

   [2]Skip to main content

   [3]aider (BUTTON)

     * [4]Home
     * (BUTTON) [5]Installation
          + [6]Installing aider
          + [7]Optional steps
          + [8]Aider with docker
          + [9]Install with pipx
          + [10]GitHub Codespaces
     * (BUTTON) [11]Usage
          + [12]Tips
          + [13]In-chat commands
          + [14]Chat modes
          + [15]Tutorial videos
          + [16]Voice-to-code with aider
          + [17]Images & web pages
          + [18]Prompt caching
          + [19]Aider in your browser
          + [20]Specifying coding conventions
          + [21]Linting and testing
     * (BUTTON) [22]Connecting to LLMs
          + [23]OpenAI
          + [24]Anthropic
          + [25]Gemini
          + [26]GROQ
          + [27]Azure
          + [28]Cohere
          + [29]DeepSeek
          + [30]Ollama
          + [31]OpenAI compatible APIs
          + [32]OpenRouter
          + [33]Vertex AI
          + [34]Amazon Bedrock
          + [35]Other LLMs
          + [36]Editing format
          + [37]Model warnings
     * (BUTTON) [38]Configuration
          + [39]Options reference
          + [40]YAML config file
          + [41]Config with .env
          + [42]Advanced model settings
     * (BUTTON) [43]Troubleshooting
          + [44]File editing problems
          + [45]Model warnings
          + [46]Token limits
          + [47]Aider not found
          + [48]Dependency versions
          + [49]Using /help
     * (BUTTON) [50]Example chat transcripts
          + [51]Create a simple flask app with aider
          + [52]Modify an open source 2048 game with aider
          + [53]A complex multi-file change, with debugging
          + [54]Create a "black box" test case
          + [55]Automatically update docs with aider
          + [56]Build pong with aider and pygame.
          + [57]Complete a css exercise with aider
          + [58]Download, analyze and plot US Census data
          + [59]Editing an asciinema cast file with aider
          + [60]Hello aider!
          + [61]Honor the NO_COLOR environment variable
          + [62]Improve css styling of chat transcripts
          + [63]Semantic search & replace code with aider
     * (BUTTON) [64]More info
          + [65]Git integration
          + [66]Supported languages
          + [67]Repository map
          + [68]Scripting aider
          + [69]Infinite output
          + [70]Edit formats
          + [71]Analytics
          + [72]Privacy policy
          + [73]Release history
     * [74]FAQ
     * [75]Aider LLM Leaderboards
     * [76]Aider blog

     * [77]GitHub
     * [78]Discord

   Aider is AI pair programming in your terminal. Aider is on [79]GitHub
   and [80]Discord.

   ____________________

     * [81]GitHub
     * [82]Discord
     * [83]Blog

   April 09, 2024

GPT-4 Turbo with Vision is a step backwards for coding

   [84]OpenAI just released GPT-4 Turbo with Vision and it performs worse
   on aider's coding benchmark suites than all the previous GPT-4 models.
   In particular, it seems much more prone to "lazy coding" than the
   existing GPT-4 Turbo "preview" models.

Code editing skill

   [85]benchmark results

   Aider relies on a [86]code editing benchmark to quantitatively evaluate
   how well an LLM can make changes to existing code. The benchmark uses
   aider to try and complete [87]133 Exercism Python coding exercises.

   For each exercise, the LLM gets two tries to solve each problem:
       description of the coding task. If the tests all pass, we are done.
       and gives it a second try to complete the task.

   GPT-4 Turbo with Vision scores only 62% on this benchmark, the lowest
   score of any of the existing GPT-4 models. The other models scored
   63-66%, so this represents only a small regression, and is likely
   statistically insignificant when compared against gpt-4-0613.

Lazy coding

   [88]benchmark results

   The GPT-4 Turbo "preview" models have been widely criticized for being
   "lazy" when coding. They often omit needed code and instead leave
   comments with homework assignments like "implement method here".
def some_complex_method(foo, bar):
    # ... implement method here ...

   Aider uses a [89]"laziness" benchmark suite which is designed to both
   provoke and quantify lazy coding. It consists of 89 python refactoring
   tasks which tend to make GPT-4 Turbo code in that lazy manner.

   The new GPT-4 Turbo with Vision model scores only 34% on aider's
   refactoring benchmark, making it the laziest coder of all the GPT-4
   Turbo models by a significant margin.

Conclusions

   Aider has full support for the new GPT-4 Turbo with Vision model, which
   you can access using the switch --model gpt-4-turbo-2024-04-09. But
   aider will continue to use gpt-4-1106-preview by default, as it is by
   far the strongest coder of the GPT-4 models.

